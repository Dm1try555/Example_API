version: "3.8"

services:
  backend:
    build:
      context: .
      dockerfile: backend/Dockerfile
    volumes:
      - ./backend:/app
    networks:
      - app-network
    ports:
      - "8000:8000"
    depends_on:
      - db
      - redis
      - minio
    environment:
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
    command: python manage.py runserver 0.0.0.0:8000

  db:
    image: mysql:8
    volumes:
      - db_data:/var/lib/mysql
    networks:
      - app-network
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
    ports:
      - "3307:3306"

  minio:
    image: minio/minio
    volumes:
      - minio_data:/data
    networks:
      - app-network
    environment:
      MINIO_ACCESS_KEY: ${MINIO_ACCESS_KEY}
      MINIO_SECRET_KEY: ${MINIO_SECRET_KEY}
    command: server /data
    ports:
      - "9000:9000"

  redis:
    image: redis:alpine
    networks:
      - app-network
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    networks:
      - app-network
    environment:
      PMA_HOST: db
      PMA_PORT: 3306
    ports:
      - "8082:80"

  traefik:
    image: traefik:v2.5
    command:
      - "--api.insecure=true"
      - "--providers.docker=true"
    ports:
      - "80:80"
      - "8081:8080"
    networks:
      - app-network
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

volumes:
  backend_data:
  db_data:
  minio_data:
  redis_data:

networks:
  app-network:
    driver: bridge
