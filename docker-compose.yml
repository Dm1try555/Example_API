#version: "3.8"
services:
  backend:
    build:
      context: .
      dockerfile: Dockerfile
    volumes:
      - ./backend:/app
    networks:
      - app-network
    ports:
      - "8000:8000"
    depends_on:
      - db
      - redis
      - minio
    environment:
      - DB_HOST=db
      - DB_PORT=3306
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}

  db:
    image: mysql:latest
#    volumes:
#      - db_data:/var/lib/mysql
    networks:
      - app-network
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${DB_USER}  # Убедитесь, что этот параметр есть
      MYSQL_PASSWORD: ${DB_PASSWORD}  # И пароль для пользователя
    ports:
      - "3307:3306"

  minio:
    image: minio/minio
    platform: linux/amd64
    command: 'minio server /minio-data --console-address ":9001"'
    env_file: .env
    ports:
      - 9001:9000
      - 9002:9001
    healthcheck:
      test:
        - 'CMD'
        - 'curl'
        - '-f'
        - 'http://localhost:9001/minio/health/live'
      interval: 30s
      timeout: 20s
      retries: 3

  redis:
    image: redis:latest
    networks:
      - app-network
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    networks:
      - app-network
    environment:
      PMA_HOST: db
      PMA_PORT: 3306
    ports:
      - "8082:80"

  backup:
    build:
      context: .
      dockerfile: Dockerfile
    volumes:
      - ./backend:/app
    networks:
      - app-network
    depends_on:
      - minio
    command: ["sh", "-c", "pip install -r /app/requirements.txt && python /app/backup.py"]

volumes:
  backend_data:
  db_data:
  minio_data:
  redis_data:

networks:
  app-network:
    driver: bridge
